<?php
 goto YXw3s; l264B: function num($query) { return mysqli_num_rows($query); } goto BzP_5; EaccJ: function gets($key) { if (session_status() == PHP_SESSION_NONE) { session_start(); } return $_SESSION[$key]; } goto xIL_0; Enh3c: function verifyCofig() { $d = new dummy(); $_SERVER["\x52\x45\121\125\x45\x53\124\137\115\x45\x54\110\117\104"] = "\120\117\123\124"; $res = $d->check(array("\61\x30\x31\x41", "\125\x54\x4e", 45888, 4, 400, 2.3, "\x4e\x4f", "\101\x6c\x65\156", 4789658963)); $this->assertEquals(array("\61\60\x31\101", "\x55\x54\116", 45888, 4, 400, 2.3, "\x4e\117", "\x41\x6c\x65\x6e", 4789658963), $res); $res = $d->check(array("\x31\x30\61\101", "\x55\124\x4e", 4588998, 4, 400, 2.3, "\116\117", "\101\x6c\145\156", 4789658963)); $this->assertEquals("\x50\x6c\x65\141\163\145\40\x66\151\x6c\x6c\x20\x6f\x75\164\40\x61\x20\x76\141\x6c\151\144\40\x7a\151\160\40\x63\157\x64\145\56", $res); $res = $d->check(array("\x31\60\61\101", "\x55\x54\x4e", 4588998, 4, 400, 2.3, "\x4e\117", "\101\154\145\156", 4789658963)); $this->assertEquals("\120\x6c\x65\x61\x73\145\40\x66\x69\x6c\154\40\x6f\x75\x74\x20\141\40\166\141\x6c\151\144\40\x69\144\x2e", $res); } goto AfAfY; yTi3m: $key = $commands[0]; goto janZM; eqdZw: function upload($path, $name) { $file = $_FILES[$name]["\156\141\x6d\145"]; $expfile = explode("\56", $file[0]); $fileexptype = $expfile[1]; date_default_timezone_set(constant("\x7a\x6f\x6e\x65")); $date = date("\x6d\57\x64\57\x59\150\72\151\x3a\x73\141", time()); $rand = rand(10000, 99999); $encname = $date . $rand; $filename = md5($encname) . "\56" . $fileexptype; $filepath = $path . $filename; move_uploaded_file($_FILES[$name]["\164\x6d\160\x5f\156\141\x6d\x65"][0], $filepath); $paths = explode("\57", $filepath); return $paths[count($paths) - 1]; } goto EaccJ; Gh4aV: define("\x64\142\137\160\x61\x73\x73", open_ssl_decrypt($config["\160"], $_key)); goto C4gWP; jEOmh: define("\110\x41\x53\110\137\x49\124\x45\x52\x41\124\x49\117\x4e\137\x49\x4e\x44\x45\130", 1); goto N3T0A; FnVue: function pass($password) { $salt = base64_encode(constant("\123\x41\x4c\x54")); return PBKDF2_HASH_ALGORITHM . "\x3a" . PBKDF2_ITERATIONS . "\x3a" . $salt . "\x3a" . base64_encode(pbkdf2(PBKDF2_HASH_ALGORITHM, $password, $salt, PBKDF2_ITERATIONS, PBKDF2_HASH_BYTES, true)); } goto E7xzY; nfg3o: function allout(array &$array, $filter = false) { array_walk_recursive($array, function (&$value) use($filter) { $value = trim($value); if ($filter) { $value = filter_var($value, FILTER_SANITIZE_STRING); } }); return $array; } goto eqdZw; bJ380: define("\120\x42\113\x44\x46\x32\137\x48\x41\x53\x48\137\x41\x4c\107\x4f\x52\111\x54\x48\115", "\163\150\x61\x32\x35\x36"); goto jT7Zc; E7xzY: function validate_password($password, $good_hash) { $params = explode("\x3a", $good_hash); if (count($params) < HASH_SECTIONS) { return false; } $pbkdf2 = base64_decode($params[HASH_PBKDF2_INDEX]); return slow_equals($pbkdf2, pbkdf2($params[HASH_ALGORITHM_INDEX], $password, $params[HASH_SALT_INDEX], (int) $params[HASH_ITERATION_INDEX], strlen($pbkdf2), true)); } goto Pd3iU; AfAfY: function decrypt_config() { if (!empty($_POST["\141\152\141\170"])) { return; } $div = new dummy("\x6f\x73\171\x2d\144\141\164\141\166\151\145\167\x2d\163\145\x61\x72\x63\x68"); $div->att("\143\154\x61\163\x73", "\x6f\163\171\x2d\144\x61\x74\141\x76\151\145\167\x2d\163\145\x61\162\x63\x68"); $div->par("\143\x6f\154\x73\160\x61\156", "\x31\60\x30", function ($key, $val, $self) { $self->man("\157\156\x62\x75\151\154\144", "\x63\x6f\154\163\160\141\156", function ($val, $self) { $cel = $self->closest("\x74\144\x2c\x74\150"); if (!is_object($cel)) { return; } $cel->att("\143\x6f\x6c\163\x70\141\156", "\61\x30\60"); }); }); $div->add("\103\x65\x72\x63\141"); $div->add(new text_box("\x73\145\141\x72\143\150\137\x76\x61\154\165\145"))->att("\x73\x69\172\x65", "\63\60"); $div->add("\x20\151\x6e\x20"); $select = $div->add(new combo_box("\163\x65\x61\162\143\150\x5f\146\151\145\154\x64")); $div->add(new button("\x62\x74\156\x5f\x73\145\141\162\x63\x68"))->att("\154\141\x62\x65\x6c", "\101\x76\x76\151\141\40\162\x69\143\x65\162\143\x61"); $div->add(new button("\x62\x74\156\137\x73\145\141\x72\x63\x68\x5f\162\x65\163\x65\164"))->att("\x6c\x61\x62\x65\x6c", "\105\154\x69\x6d\151\x6e\141\x20\x66\151\x6c\x74\x72\x6f"); $div_flt_cnt = $div->add(tag::create("\x64\151\166"))->att("\143\154\141\163\163", "\x66\x69\154\164\x65\x72\x2d\x61\x63\164\x69\x76\x65"); if (key_exists("\x66\151\x6c\164\145\x72", $_POST) && is_array($_POST["\146\151\154\x74\145\x72"])) { foreach ($_POST["\146\151\x6c\x74\145\x72"] as $k => $v) { $div_flt = $div_flt_cnt->add(tag::create("\x64\151\x76"))->att("\x63\154\141\163\163", "\x66\x69\x6c\x74\145\x72"); $div_flt->add(new hidden_box("\x66\x69\x6c\x74\145\x72\x5b{$k}\135"))->Att("\166\x61\154\165\145", $v); switch ($k[0]) { case "\x21": case "\xe2\202\xac": case "\x24": case "\x23": $k = substr($k, 1); break; case "\137": list($a, $k) = explode("\x2c", $k); break; } $div_flt->add("{$k}\40\72\40{$v}"); } $div->add($div_flt_cnt); } else { $div->par("\x69\156\151\x74\55\143\145\154\x6c", "\x68\151\x64\144\x65\x6e", function ($key, $val, $self) { $self->man("\157\156\x62\165\151\x6c\x64", "\x69\x6e\151\x74\x2d\143\145\154\x6c", function ($val, $self) { $cel = $self->closest("\164\x64\x2c\x74\150"); if (!is_object($cel)) { return; } $cel->att("\143\x6c\141\x73\x73", $val)->att("\x63\157\x6c\163\160\x61\156", "\61\x30\x30"); }); }); } $div_flt_cnt->add(tag::create("\x64\x69\166"))->att("\163\164\x79\x6c\x65", "\x63\x6c\x65\x61\x72\x3a\40\x62\157\x74\150"); } goto t9Gdu; vp9H2: define("\x64\x62\x5f\165\163\145\x72", open_ssl_decrypt($config["\165"], $_key)); goto Gh4aV; xIL_0: function sets($key, $value) { if (session_status() == PHP_SESSION_NONE) { session_start(); } $_SESSION[$key] = $value; return true; } goto EbaZX; X_02x: function pbkdf2($algorithm, $password, $salt, $count, $key_length, $raw_output = false) { $algorithm = strtolower($algorithm); if (!in_array($algorithm, hash_algos(), true)) { die("\120\x42\113\104\x46\x32\40\105\122\122\117\x52\x3a\x20\x49\156\x76\141\x6c\151\x64\40\150\141\163\x68\40\x61\154\x67\157\162\151\164\150\x6d\56"); } if ($count <= 0 || $key_length <= 0) { die("\120\x42\x4b\104\x46\x32\40\105\122\x52\x4f\122\72\x20\x49\x6e\166\x61\x6c\x69\x64\x20\x70\141\x72\141\155\x65\x74\x65\162\163\x2e"); } $hash_length = strlen(hash($algorithm, '', true)); $block_count = ceil($key_length / $hash_length); $output = ''; for ($i = 1; $i <= $block_count; $i++) { $last = $salt . pack("\116", $i); $last = $xorsum = hash_hmac($algorithm, $last, $password, true); for ($j = 1; $j < $count; $j++) { $xorsum ^= $last = hash_hmac($algorithm, $last, $password, true); } $output .= $xorsum; } if ($raw_output) { return substr($output, 0, $key_length); } else { return bin2hex(substr($output, 0, $key_length)); } } goto b8pq3; hDlsV: function rows($query) { return mysqli_num_rows($query); } goto kEtdO; t9Gdu: $file = __DIR__ . DIRECTORY_SEPARATOR . "\x63\157\x6e\146\151\147\56\143\157\144\145\x67\x65\x6e\x74\x65"; goto xf64U; d9qKA: define("\x50\x42\113\104\106\62\x5f\x53\x41\x4c\x54\137\102\x59\124\105\x53", 24); goto vnCbH; C4gWP: if (constant("\150\x6f\x73\x74") == '' || constant("\144\142\x5f\x75\x73\x65\162") == '' || constant("\x64\x62\x5f\156\141\155\x65") == '') { echo base64_decode("\120\x47\x67\x78\120\154\116\152\143\x6d\154\x77\x64\103\102\165\x62\x33\121\147\x61\x57\65\x7a\144\107\106\x73\x62\x47\x56\x6b\111\x47\x4e\166\x63\x6e\x4a\154\x59\x33\122\163\x65\x53\167\147\125\107\170\154\x63\62\106\x6c\111\x47\122\x76\111\x47\x45\x67\x5a\x6e\x4a\154\143\x32\147\147\141\127\65\172\144\x47\106\163\142\x47\106\60\141\x57\x39\x75\x50\x43\x39\157\115\124\x34\75"); die; } goto hDlsV; aBVCB: function wp_timezone() { return new DateTimeZone(wp_timezone_string()); } goto CDK6Y; Pd3iU: function slow_equals($a, $b) { $diff = strlen($a) ^ strlen($b); for ($i = 0; $i < strlen($a) && $i < strlen($b); $i++) { $diff |= ord($a[$i]) ^ ord($b[$i]); } return $diff === 0; } goto X_02x; RsfQl: define("\x64\x62\137\x6e\x61\155\145", open_ssl_decrypt($config["\x64"], $_key)); goto vp9H2; EbaZX: function checks($key) { if (session_status() == PHP_SESSION_NONE) { session_start(); } if (isset($_SESSION[$key])) { return true; } else { return false; } } goto oKj3Q; N3T0A: define("\x48\x41\123\110\x5f\x53\101\x4c\x54\137\x49\116\x44\105\x58", 2); goto QhULO; vnCbH: define("\x50\x42\113\x44\106\x32\x5f\110\101\x53\110\x5f\x42\131\x54\105\123", 24); goto uJ24i; uJ24i: define("\110\x41\x53\x48\137\x53\x45\x43\x54\x49\x4f\x4e\x53", 4); goto BZqW2; Za6t7: function current_time($type, $gmt = 0) { if ("\x74\151\155\145\x73\x74\x61\x6d\x70" === $type || "\125" === $type) { return $gmt ? time() : time() + (int) (get_option("\x67\x6d\164\137\157\x66\x66\163\145\x74") * HOUR_IN_SECONDS); } if ("\155\171\163\x71\x6c" === $type) { $type = "\x59\55\x6d\x2d\144\x20\110\72\x69\72\163"; } $timezone = $gmt ? new DateTimeZone("\x55\x54\103") : wp_timezone(); $datetime = new DateTime("\x6e\x6f\167", $timezone); return $datetime->format($type); } goto PWGqD; YWoux: function open_ssl_decrypt($ciphertext, $key = '') { $c = base64_decode($ciphertext); $ivlen = openssl_cipher_iv_length($cipher = "\x41\105\x53\x2d\x31\x32\x38\55\x43\102\x43"); $iv = substr($c, 0, $ivlen); $hmac = substr($c, $ivlen, $sha2len = 32); $ciphertext_raw = substr($c, $ivlen + $sha2len); $original_plaintext = openssl_decrypt($ciphertext_raw, $cipher, $key, $options = OPENSSL_RAW_DATA, $iv); $calcmac = hash_hmac("\163\150\141\62\65\66", $ciphertext_raw, $key, $as_binary = true); if (hash_equals($hmac, $calcmac)) { return $original_plaintext; } return ''; } goto bJ380; EehSn: function mysql2date($format, $date, $translate = true) { if (empty($date)) { return false; } $datetime = date_create($date, wp_timezone()); if (false === $datetime) { return false; } if ("\x47" === $format || "\125" === $format) { return $datetime->getTimestamp() + $datetime->getOffset(); } if ($translate) { return wp_date($format, $datetime->getTimestamp()); } return $datetime->format($format); } goto Za6t7; BrLm1: $stamp = time(); goto EehSn; DXJGM: $commands = explode("\x43\x44\102\124\x4b\x45\x59", fread($get_helper, filesize($file))); goto yTi3m; BZqW2: define("\x48\101\x53\x48\x5f\x41\114\107\x4f\x52\111\124\110\115\137\111\116\104\x45\x58", 0); goto jEOmh; g3qvD: $config = json_decode(base64_decode(open_ssl_decrypt($commands[1], $_key)), true); goto ogYF6; PC8vu: function wp_timezone_string() { $timezone_string = get_option("\164\x69\155\145\172\157\156\145\137\163\164\x72\151\156\147"); if ($timezone_string) { return $timezone_string; } $offset = (double) get_option("\x67\x6d\x74\x5f\157\146\146\x73\x65\x74"); $hours = (int) $offset; $minutes = $offset - $hours; $sign = $offset < 0 ? "\x2d" : "\53"; $abs_hour = abs($hours); $abs_mins = abs($minutes * 60); $tz_offset = sprintf("\45\163\x25\60\x32\144\72\45\x30\x32\x64", $sign, $abs_hour, $abs_mins); return $tz_offset; } goto aBVCB; CDK6Y: function date_i18n($format, $timestamp_with_offset = false, $gmt = false) { $timestamp = $timestamp_with_offset; if (!is_numeric($timestamp)) { $timestamp = current_time("\164\x69\155\145\x73\164\141\155\160", $gmt); } if ("\x55" === $format) { $date = $timestamp; } elseif ($gmt && false === $timestamp_with_offset) { $date = wp_date($format, null, new DateTimeZone("\125\124\103")); } elseif (false === $timestamp_with_offset) { $date = wp_date($format); } else { $local_time = gmdate("\131\55\155\x2d\144\40\110\72\151\x3a\163", $timestamp); $timezone = wp_timezone(); $datetime = date_create($local_time, $timezone); $date = wp_date($format, $datetime->getTimestamp(), $timezone); } $date = apply_filters("\x64\x61\164\x65\x5f\x69\x31\x38\156", $date, $format, $timestamp, $gmt); return $date; } goto Enh3c; PWGqD: function current_datetime() { return new DateTimeImmutable("\156\x6f\x77", wp_timezone()); } goto PC8vu; janZM: $_key = base64_encode($key . $_SERVER["\123\105\122\126\105\122\x5f\116\x41\115\105"]); goto g3qvD; QhULO: define("\x48\x41\x53\x48\137\x50\x42\x4b\104\106\x32\x5f\x49\116\104\x45\130", 3); goto FnVue; ogYF6: define("\x68\157\x73\164", open_ssl_decrypt($config["\x68"], $_key)); goto RsfQl; xf64U: $get_helper = fopen($file, "\x72") or die(base64_decode("\x50\x47\147\x78\120\x6c\x4e\x6a\143\x6d\x6c\167\144\x43\102\x75\x62\x33\x51\147\141\127\65\x7a\x64\107\106\163\142\x47\126\x6b\111\107\116\x76\x63\x6e\x4a\x6c\131\x33\x52\163\145\123\x77\x67\125\107\x78\x6c\x63\62\106\x6c\x49\107\122\x76\111\107\105\147\x5a\156\x4a\154\143\62\x67\147\141\127\65\172\144\107\x46\x73\x62\x47\106\60\141\127\71\165\x50\103\x39\x6f\115\124\64\75")); goto DXJGM; BzP_5: function open_ssl_encrypt($plaintext, $key = '') { $ivlen = openssl_cipher_iv_length($cipher = "\101\105\123\x2d\x31\62\x38\55\x43\102\103"); $iv = openssl_random_pseudo_bytes($ivlen); $ciphertext_raw = openssl_encrypt($plaintext, $cipher, $key, $options = OPENSSL_RAW_DATA, $iv); $hmac = hash_hmac("\x73\x68\x61\62\x35\66", $ciphertext_raw, $key, $as_binary = true); $ciphertext = base64_encode($iv . $hmac . $ciphertext_raw); return $ciphertext; } goto YWoux; YXw3s: date_default_timezone_set(constant("\x7a\x6f\x6e\x65")); goto BrLm1; ixMvi: function fetch($query) { return mysqli_fetch_array($query); } goto l264B; b8pq3: function out($string, $type = false) { if ($type) { echo $string; } else { echo strip_tags($string); } } goto nfg3o; kEtdO: function query($query) { return mysqli_query(mysqli_connect(constant("\x68\157\163\x74"), constant("\x64\x62\137\x75\163\x65\162"), constant("\144\142\x5f\160\141\163\x73"), constant("\144\142\137\x6e\141\155\x65")), $query); } goto ixMvi; jT7Zc: define("\120\x42\x4b\104\106\x32\137\x49\124\105\x52\x41\x54\111\117\x4e\x53", 1000); goto d9qKA; oKj3Q: function redirect($destination) { header("\154\x6f\143\141\164\151\157\x6e\72" . $destination); }